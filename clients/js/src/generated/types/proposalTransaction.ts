/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/web3.js';
import {
  getProposalInstructionDecoder,
  getProposalInstructionEncoder,
  type ProposalInstruction,
  type ProposalInstructionArgs,
} from '.';

export type ProposalTransaction = { instructions: Array<ProposalInstruction> };

export type ProposalTransactionArgs = {
  instructions: Array<ProposalInstructionArgs>;
};

export function getProposalTransactionEncoder(): Encoder<ProposalTransactionArgs> {
  return getStructEncoder([
    ['instructions', getArrayEncoder(getProposalInstructionEncoder())],
  ]);
}

export function getProposalTransactionDecoder(): Decoder<ProposalTransaction> {
  return getStructDecoder([
    ['instructions', getArrayDecoder(getProposalInstructionDecoder())],
  ]);
}

export function getProposalTransactionCodec(): Codec<
  ProposalTransactionArgs,
  ProposalTransaction
> {
  return combineCodec(
    getProposalTransactionEncoder(),
    getProposalTransactionDecoder()
  );
}
