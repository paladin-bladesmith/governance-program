/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/web3.js';

export type Config = {
  cooldownPeriodSeconds: bigint;
  proposalAcceptanceThreshold: number;
  proposalRejectionThreshold: number;
  signerBumpSeed: number;
  padding: Array<number>;
  stakeConfigAddress: Address;
  votingPeriodSeconds: bigint;
};

export type ConfigArgs = {
  cooldownPeriodSeconds: number | bigint;
  proposalAcceptanceThreshold: number;
  proposalRejectionThreshold: number;
  signerBumpSeed: number;
  padding: Array<number>;
  stakeConfigAddress: Address;
  votingPeriodSeconds: number | bigint;
};

export function getConfigEncoder(): Encoder<ConfigArgs> {
  return getStructEncoder([
    ['cooldownPeriodSeconds', getU64Encoder()],
    ['proposalAcceptanceThreshold', getU32Encoder()],
    ['proposalRejectionThreshold', getU32Encoder()],
    ['signerBumpSeed', getU8Encoder()],
    ['padding', getArrayEncoder(getU8Encoder(), { size: 7 })],
    ['stakeConfigAddress', getAddressEncoder()],
    ['votingPeriodSeconds', getU64Encoder()],
  ]);
}

export function getConfigDecoder(): Decoder<Config> {
  return getStructDecoder([
    ['cooldownPeriodSeconds', getU64Decoder()],
    ['proposalAcceptanceThreshold', getU32Decoder()],
    ['proposalRejectionThreshold', getU32Decoder()],
    ['signerBumpSeed', getU8Decoder()],
    ['padding', getArrayDecoder(getU8Decoder(), { size: 7 })],
    ['stakeConfigAddress', getAddressDecoder()],
    ['votingPeriodSeconds', getU64Decoder()],
  ]);
}

export function getConfigCodec(): Codec<ConfigArgs, Config> {
  return combineCodec(getConfigEncoder(), getConfigDecoder());
}
