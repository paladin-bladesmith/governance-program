/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/web3.js';
import {
  getProposalAccountMetaDecoder,
  getProposalAccountMetaEncoder,
  type ProposalAccountMeta,
  type ProposalAccountMetaArgs,
} from '.';

export type ProposalInstruction = {
  programId: Address;
  accounts: Array<ProposalAccountMeta>;
  data: ReadonlyUint8Array;
  executed: boolean;
};

export type ProposalInstructionArgs = {
  programId: Address;
  accounts: Array<ProposalAccountMetaArgs>;
  data: ReadonlyUint8Array;
  executed: boolean;
};

export function getProposalInstructionEncoder(): Encoder<ProposalInstructionArgs> {
  return getStructEncoder([
    ['programId', getAddressEncoder()],
    ['accounts', getArrayEncoder(getProposalAccountMetaEncoder())],
    ['data', addEncoderSizePrefix(getBytesEncoder(), getU32Encoder())],
    ['executed', getBooleanEncoder()],
  ]);
}

export function getProposalInstructionDecoder(): Decoder<ProposalInstruction> {
  return getStructDecoder([
    ['programId', getAddressDecoder()],
    ['accounts', getArrayDecoder(getProposalAccountMetaDecoder())],
    ['data', addDecoderSizePrefix(getBytesDecoder(), getU32Decoder())],
    ['executed', getBooleanDecoder()],
  ]);
}

export function getProposalInstructionCodec(): Codec<
  ProposalInstructionArgs,
  ProposalInstruction
> {
  return combineCodec(
    getProposalInstructionEncoder(),
    getProposalInstructionDecoder()
  );
}
